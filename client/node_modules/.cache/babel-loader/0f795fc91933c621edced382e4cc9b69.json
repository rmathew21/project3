{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Circle = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MapChildHelper = require(\"../utils/MapChildHelper\");\n\nvar _constants = require(\"../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * A wrapper around `google.maps.Circle`\r\n *\r\n * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#Circle\r\n */\n\n/*\r\n * -----------------------------------------------------------------------------\r\n * This file is auto-generated from the corresponding file at `src/macros/`.\r\n * Please **DO NOT** edit this file directly when creating PRs.\r\n * -----------------------------------------------------------------------------\r\n */\n\n/* global google */\n\n\nvar Circle = exports.Circle = function (_React$PureComponent) {\n  ;\n  (0, _inherits3.default)(Circle, _React$PureComponent);\n  /*\r\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#Circle\r\n   */\n\n  function Circle(props, context) {\n    ;\n    (0, _classCallCheck3.default)(this, Circle);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Circle.__proto__ || (0, _getPrototypeOf2.default)(Circle)).call(this, props, context));\n\n    var circle = new google.maps.Circle();\n    (0, _MapChildHelper.construct)(Circle.propTypes, updaterMap, _this.props, circle);\n    circle.setMap(_this.context[_constants.MAP]);\n    _this.state = (0, _defineProperty3.default)({}, _constants.CIRCLE, circle);\n    return _this;\n  }\n\n  ;\n  (0, _createClass3.default)(Circle, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ;\n      (0, _MapChildHelper.componentDidMount)(this, this.state[_constants.CIRCLE], eventMap);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      ;\n      (0, _MapChildHelper.componentDidUpdate)(this, this.state[_constants.CIRCLE], eventMap, updaterMap, prevProps);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ;\n      (0, _MapChildHelper.componentWillUnmount)(this);\n      var circle = this.state[_constants.CIRCLE];\n\n      if (circle) {\n        circle.setMap(null);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return false;\n    }\n    /**\r\n     * Gets the `LatLngBounds` of this Circle.\r\n     * @type LatLngBoundsLatLngBounds\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.state[_constants.CIRCLE].getBounds();\n    }\n    /**\r\n     * Returns the center of this circle.\r\n     * @type LatLng\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.state[_constants.CIRCLE].getCenter();\n    }\n    /**\r\n     * Returns whether this circle can be dragged by the user.\r\n     * @type boolean\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getDraggable\",\n    value: function getDraggable() {\n      return this.state[_constants.CIRCLE].getDraggable();\n    }\n    /**\r\n     * Returns whether this circle can be edited by the user.\r\n     * @type boolean\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getEditable\",\n    value: function getEditable() {\n      return this.state[_constants.CIRCLE].getEditable();\n    }\n    /**\r\n     * Returns the radius of this circle (in meters).\r\n     * @type number\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      return this.state[_constants.CIRCLE].getRadius();\n    }\n    /**\r\n     * Returns whether this circle is visible on the map.\r\n     * @type boolean\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      return this.state[_constants.CIRCLE].getVisible();\n    }\n  }]);\n  return Circle;\n}(_react2.default.PureComponent);\n\nCircle.propTypes = {\n  /**\r\n   * @type LatLng|LatLngLiteral\r\n   */\n  defaultCenter: _propTypes2.default.any,\n\n  /**\r\n   * @type boolean\r\n   */\n  defaultDraggable: _propTypes2.default.bool,\n\n  /**\r\n   * @type boolean\r\n   */\n  defaultEditable: _propTypes2.default.bool,\n\n  /**\r\n   * @type CircleOptions\r\n   */\n  defaultOptions: _propTypes2.default.any,\n\n  /**\r\n   * @type number\r\n   */\n  defaultRadius: _propTypes2.default.number,\n\n  /**\r\n   * @type boolean\r\n   */\n  defaultVisible: _propTypes2.default.bool,\n\n  /**\r\n   * @type LatLng|LatLngLiteral\r\n   */\n  center: _propTypes2.default.any,\n\n  /**\r\n   * @type boolean\r\n   */\n  draggable: _propTypes2.default.bool,\n\n  /**\r\n   * @type boolean\r\n   */\n  editable: _propTypes2.default.bool,\n\n  /**\r\n   * @type CircleOptions\r\n   */\n  options: _propTypes2.default.any,\n\n  /**\r\n   * @type number\r\n   */\n  radius: _propTypes2.default.number,\n\n  /**\r\n   * @type boolean\r\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\r\n   * function\r\n   */\n  onDblClick: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onDragEnd: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onDragStart: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onMouseDown: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onMouseMove: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onMouseOut: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onMouseOver: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onMouseUp: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onRightClick: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onCenterChanged: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onDrag: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onRadiusChanged: _propTypes2.default.func\n};\nCircle.contextTypes = (0, _defineProperty3.default)({}, _constants.MAP, _propTypes2.default.object);\nexports.default = Circle;\nvar eventMap = {\n  onDblClick: \"dblclick\",\n  onDragEnd: \"dragend\",\n  onDragStart: \"dragstart\",\n  onMouseDown: \"mousedown\",\n  onMouseMove: \"mousemove\",\n  onMouseOut: \"mouseout\",\n  onMouseOver: \"mouseover\",\n  onMouseUp: \"mouseup\",\n  onRightClick: \"rightclick\",\n  onCenterChanged: \"center_changed\",\n  onClick: \"click\",\n  onDrag: \"drag\",\n  onRadiusChanged: \"radius_changed\"\n};\nvar updaterMap = {\n  center: function center(instance, _center) {\n    instance.setCenter(_center);\n  },\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  radius: function radius(instance, _radius) {\n    instance.setRadius(_radius);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}