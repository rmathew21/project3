{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreetViewPanorama = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _invariant = require(\"invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MapChildHelper = require(\"../utils/MapChildHelper\");\n\nvar _constants = require(\"../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * A wrapper around `google.maps.StreetViewPanorama`\r\n *\r\n * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanorama\r\n */\n\n\nvar StreetViewPanorama = exports.StreetViewPanorama = function (_React$PureComponent) {\n  ;\n  (0, _inherits3.default)(StreetViewPanorama, _React$PureComponent);\n\n  function StreetViewPanorama(props, context) {\n    ;\n    (0, _classCallCheck3.default)(this, StreetViewPanorama);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (StreetViewPanorama.__proto__ || (0, _getPrototypeOf2.default)(StreetViewPanorama)).call(this, props, context));\n\n    (0, _invariant2.default)(!!_this.context[_constants.MAP], \"Did you render <StreetViewPanorama> as a child of <GoogleMap> with withGoogleMap() HOC?\");\n    (0, _MapChildHelper.construct)(StreetViewPanorama.propTypes, updaterMap, _this.props, _this.context[_constants.MAP].getStreetView());\n    return _this;\n  }\n\n  ;\n  (0, _createClass3.default)(StreetViewPanorama, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return (0, _defineProperty3.default)({}, _constants.MAP, this.context[_constants.MAP].getStreetView());\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ;\n      (0, _MapChildHelper.componentDidMount)(this, this.context[_constants.MAP].getStreetView(), eventMap);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      ;\n      (0, _MapChildHelper.componentDidUpdate)(this, this.context[_constants.MAP].getStreetView(), eventMap, updaterMap, prevProps);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ;\n      (0, _MapChildHelper.componentWillUnmount)(this);\n\n      var streetViewPanorama = this.context[_constants.MAP].getStreetView();\n\n      if (streetViewPanorama) {\n        streetViewPanorama.setVisible(false);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return _react2.default.createElement(\"div\", null, children);\n    }\n    /**\r\n     * Returns the set of navigation links for the Street View panorama.\r\n     * @type Array<StreetViewLink>\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getLinks\",\n    value: function getLinks() {\n      return this.context[_constants.MAP].getLinks();\n    }\n    /**\r\n     * Returns the StreetViewLocation of the current panorama.\r\n     * @type StreetViewLocation\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      return this.context[_constants.MAP].getLocation();\n    }\n    /**\r\n     * Returns the state of motion tracker. If true when the user physically moves the device and the browser supports it, the Street View Panorama tracks the physical movements.\r\n     * @type boolean\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getMotionTracking\",\n    value: function getMotionTracking() {\n      return this.context[_constants.MAP].getMotionTracking();\n    }\n    /**\r\n     * Returns the current panorama ID for the Street View panorama. This id is stable within the browser's current session only.\r\n     * @type string\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getPano\",\n    value: function getPano() {\n      return this.context[_constants.MAP].getPano();\n    }\n    /**\r\n     * Returns the heading and pitch of the photographer when this panorama was taken. For Street View panoramas on the road, this also reveals in which direction the car was travelling. This data is available after the `pano_changed` event.\r\n     * @type StreetViewPovpano_changed\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getPhotographerPov\",\n    value: function getPhotographerPov() {\n      return this.context[_constants.MAP].getPhotographerPov();\n    }\n    /**\r\n     * Returns the current `LatLng` position for the Street View panorama.\r\n     * @type LatLngLatLng\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this.context[_constants.MAP].getPosition();\n    }\n    /**\r\n     * Returns the current point of view for the Street View panorama.\r\n     * @type StreetViewPov\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getPov\",\n    value: function getPov() {\n      return this.context[_constants.MAP].getPov();\n    }\n    /**\r\n     * Returns the status of the panorama on completion of the `setPosition()` or `setPano()` request.\r\n     * @type StreetViewStatussetPosition()setPano()\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      return this.context[_constants.MAP].getStatus();\n    }\n    /**\r\n     * Returns `true` if the panorama is visible. It does not specify whether Street View imagery is available at the specified position.\r\n     * @type booleantrue\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      return this.context[_constants.MAP].getVisible();\n    }\n    /**\r\n     * Returns the zoom level of the panorama. Fully zoomed-out is level 0, where the field of view is 180 degrees. Zooming in increases the zoom level.\r\n     * @type number\r\n     * @public\r\n     */\n\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.context[_constants.MAP].getZoom();\n    }\n  }]);\n  return StreetViewPanorama;\n}(_react2.default.PureComponent);\n/*\r\n                                * -----------------------------------------------------------------------------\r\n                                * This file is auto-generated from the corresponding file at `src/macros/`.\r\n                                * Please **DO NOT** edit this file directly when creating PRs.\r\n                                * -----------------------------------------------------------------------------\r\n                                */\n\n\nStreetViewPanorama.propTypes = {\n  /**\r\n   * @type Array<StreetViewLink>\r\n   */\n  defaultLinks: _propTypes2.default.any,\n\n  /**\r\n   * @type boolean\r\n   */\n  defaultMotionTracking: _propTypes2.default.bool,\n\n  /**\r\n   * @type StreetViewPanoramaOptions\r\n   */\n  defaultOptions: _propTypes2.default.any,\n\n  /**\r\n   * @type string\r\n   */\n  defaultPano: _propTypes2.default.string,\n\n  /**\r\n   * @type LatLng|LatLngLiteral\r\n   */\n  defaultPosition: _propTypes2.default.any,\n\n  /**\r\n   * @type StreetViewPov\r\n   */\n  defaultPov: _propTypes2.default.any,\n\n  /**\r\n   * @type boolean\r\n   */\n  defaultVisible: _propTypes2.default.bool,\n\n  /**\r\n   * @type number\r\n   */\n  defaultZoom: _propTypes2.default.number,\n\n  /**\r\n   * @type Array<StreetViewLink>\r\n   */\n  links: _propTypes2.default.any,\n\n  /**\r\n   * @type boolean\r\n   */\n  motionTracking: _propTypes2.default.bool,\n\n  /**\r\n   * @type StreetViewPanoramaOptions\r\n   */\n  options: _propTypes2.default.any,\n\n  /**\r\n   * @type string\r\n   */\n  pano: _propTypes2.default.string,\n\n  /**\r\n   * @type LatLng|LatLngLiteral\r\n   */\n  position: _propTypes2.default.any,\n\n  /**\r\n   * @type StreetViewPov\r\n   */\n  pov: _propTypes2.default.any,\n\n  /**\r\n   * @type boolean\r\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\r\n   * @type number\r\n   */\n  zoom: _propTypes2.default.number,\n\n  /**\r\n   * function\r\n   */\n  onCloseClick: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onPanoChanged: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onPositionChanged: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onPovChanged: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onResize: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onStatusChanged: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onVisibleChanged: _propTypes2.default.func,\n\n  /**\r\n   * function\r\n   */\n  onZoomChanged: _propTypes2.default.func\n};\nStreetViewPanorama.contextTypes = (0, _defineProperty3.default)({}, _constants.MAP, _propTypes2.default.object);\nStreetViewPanorama.childContextTypes = (0, _defineProperty3.default)({}, _constants.MAP, _propTypes2.default.object);\nexports.default = StreetViewPanorama;\nvar eventMap = {\n  onCloseClick: \"closeclick\",\n  onPanoChanged: \"pano_changed\",\n  onPositionChanged: \"position_changed\",\n  onPovChanged: \"pov_changed\",\n  onResize: \"resize\",\n  onStatusChanged: \"status_changed\",\n  onVisibleChanged: \"visible_changed\",\n  onZoomChanged: \"zoom_changed\"\n};\nvar updaterMap = {\n  links: function links(instance, _links) {\n    instance.setLinks(_links);\n  },\n  motionTracking: function motionTracking(instance, _motionTracking) {\n    instance.setMotionTracking(_motionTracking);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  pano: function pano(instance, _pano) {\n    instance.setPano(_pano);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  pov: function pov(instance, _pov) {\n    instance.setPov(_pov);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zoom: function zoom(instance, _zoom) {\n    instance.setZoom(_zoom);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}