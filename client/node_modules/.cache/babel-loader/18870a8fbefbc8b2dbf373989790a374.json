{"ast":null,"code":"import _defineProperty from \"/Users/robinmathew/Desktop/Projects/project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/Users/robinmathew/Desktop/Projects/project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/robinmathew/Desktop/Projects/project3/client/src/components/Snackbar/SnackbarContent.jsx\";\n\n/*!\n\n=========================================================\n* Material Dashboard React - v1.7.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport snackbarContentStyle from \"../../assets/jss/material-dashboard-react/components/snackbarContentStyle.jsx\";\n\nfunction SnackbarContent(_ref) {\n  var props = _extends({}, _ref);\n\n  var classes = props.classes,\n      message = props.message,\n      color = props.color,\n      close = props.close,\n      icon = props.icon,\n      rtlActive = props.rtlActive;\n  var action = [];\n  var messageClasses = classNames(_defineProperty({}, classes.iconMessage, icon !== undefined));\n\n  if (close !== undefined) {\n    action = [React.createElement(IconButton, {\n      className: classes.iconButton,\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Close, {\n      className: classes.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))];\n  }\n\n  return React.createElement(Snack, {\n    message: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, icon !== undefined ? React.createElement(props.icon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : null, React.createElement(\"span\", {\n      className: messageClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, message)),\n    classes: {\n      root: classes.root + \" \" + classes[color],\n      message: classes.message,\n      action: classNames(_defineProperty({}, classes.actionRTL, rtlActive))\n    },\n    action: action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n}\n\nSnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  rtlActive: PropTypes.bool\n};\nexport default withStyles(snackbarContentStyle)(SnackbarContent);","map":{"version":3,"sources":["/Users/robinmathew/Desktop/Projects/project3/client/src/components/Snackbar/SnackbarContent.jsx"],"names":["React","PropTypes","classNames","withStyles","Snack","IconButton","Close","snackbarContentStyle","SnackbarContent","props","classes","message","color","close","icon","rtlActive","action","messageClasses","iconMessage","undefined","iconButton","root","actionRTL","propTypes","object","isRequired","node","oneOf","bool"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,+EAAjC;;AAEA,SAASC,eAAT,OAAuC;AAAA,MAATC,KAAS;;AAAA,MAC7BC,OAD6B,GACuBD,KADvB,CAC7BC,OAD6B;AAAA,MACpBC,OADoB,GACuBF,KADvB,CACpBE,OADoB;AAAA,MACXC,KADW,GACuBH,KADvB,CACXG,KADW;AAAA,MACJC,KADI,GACuBJ,KADvB,CACJI,KADI;AAAA,MACGC,IADH,GACuBL,KADvB,CACGK,IADH;AAAA,MACSC,SADT,GACuBN,KADvB,CACSM,SADT;AAErC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAMC,cAAc,GAAGf,UAAU,qBAC9BQ,OAAO,CAACQ,WADsB,EACRJ,IAAI,KAAKK,SADD,EAAjC;;AAGA,MAAIN,KAAK,KAAKM,SAAd,EAAyB;AACvBH,IAAAA,MAAM,GAAG,CACP,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEN,OAAO,CAACU,UADrB;AAEE,MAAA,GAAG,EAAC,OAFN;AAGE,oBAAW,OAHb;AAIE,MAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEV,OAAO,CAACG,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADO,CAAT;AAUD;;AACD,SACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,KAAKK,SAAT,GAAqB,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAET,OAAO,CAACI,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAA+D,IADlE,EAEE;AAAM,MAAA,SAAS,EAAEG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCN,OAAlC,CAFF,CAFJ;AAOE,IAAA,OAAO,EAAE;AACPU,MAAAA,IAAI,EAAEX,OAAO,CAACW,IAAR,GAAe,GAAf,GAAqBX,OAAO,CAACE,KAAD,CAD3B;AAEPD,MAAAA,OAAO,EAAED,OAAO,CAACC,OAFV;AAGPK,MAAAA,MAAM,EAAEd,UAAU,qBAAIQ,OAAO,CAACY,SAAZ,EAAwBP,SAAxB;AAHX,KAPX;AAYE,IAAA,MAAM,EAAEC,MAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD;;AAEDR,eAAe,CAACe,SAAhB,GAA4B;AAC1Bb,EAAAA,OAAO,EAAET,SAAS,CAACuB,MAAV,CAAiBC,UADA;AAE1Bd,EAAAA,OAAO,EAAEV,SAAS,CAACyB,IAAV,CAAeD,UAFE;AAG1Bb,EAAAA,KAAK,EAAEX,SAAS,CAAC0B,KAAV,CAAgB,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,QAA/B,EAAyC,SAAzC,CAAhB,CAHmB;AAI1Bd,EAAAA,KAAK,EAAEZ,SAAS,CAAC2B,IAJS;AAK1Bd,EAAAA,IAAI,EAAEb,SAAS,CAACuB,MALU;AAM1BT,EAAAA,SAAS,EAAEd,SAAS,CAAC2B;AANK,CAA5B;AASA,eAAezB,UAAU,CAACI,oBAAD,CAAV,CAAiCC,eAAjC,CAAf","sourcesContent":["/*!\n\n=========================================================\n* Material Dashboard React - v1.7.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport snackbarContentStyle from \"../../assets/jss/material-dashboard-react/components/snackbarContentStyle.jsx\";\n\nfunction SnackbarContent({ ...props }) {\n  const { classes, message, color, close, icon, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  return (\n    <Snack\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      classes={{\n        root: classes.root + \" \" + classes[color],\n        message: classes.message,\n        action: classNames({ [classes.actionRTL]: rtlActive })\n      }}\n      action={action}\n    />\n  );\n}\n\nSnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  rtlActive: PropTypes.bool\n};\n\nexport default withStyles(snackbarContentStyle)(SnackbarContent);\n"]},"metadata":{},"sourceType":"module"}